scalar UUID
scalar Datetime
scalar JSON

type User {
  id: UUID!
  name: String!
  email: String!
  active: Boolean!
  createdAt: Datetime!
  updatedAt: Datetime!
}

input GetUsersInput {
  size: Int
  offset: Int
}

input SigninInput {
  email: String!
  password: String!
}

type Query {
  getUsers(input: GetUsersInput): [User!]
  signin(input: SigninInput): User!
  getUser(id: String!): User!
  getMe: User!
}

input CreateUserInput {
  name: String!
  password: String!
  email: String!
  privilege: String
}

input RegisterUserInput {
  name: String!
  password: String!
  email: String!
}

input UpdateUserInput {
  name: String!
  email: String!
  privilege: String!
}

type Mutation {
  createUser(input: CreateUserInput): User!
  register(input: RegisterUserInput): User!
  updateUser(id: String!, input: UpdateUserInput): User!
}
